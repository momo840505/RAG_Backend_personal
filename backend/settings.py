"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
EMBEDDING_MODEL = os.getenv("EMBEDDING_MODEL", "text-embedding-3-small")
LLM_MODEL = os.getenv("LLM_MODEL", "gpt-5-nano")



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v9j^n!csk_(&k_e3+h3ffwa=ol%a9n@qyc17k-us$mg#_=^#d+'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# ALLOWED_HOSTS = []

# --- CHANGE 1: make DEBUG/ALLOWED_HOSTS configurable via env --------------------
# Rationale :
# - When deploying or binding to 0.0.0.0, Django may reject requests if ALLOWED_HOSTS is empty.
# - Reading from env keeps dev/prod behavior configurable without code edits.
DEBUG = os.getenv("DJANGO_DEBUG", "1") == "1"   # default True for development
ALLOWED_HOSTS = [h for h in os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",") if h]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "pgvector.django",
    # --- CHANGE 2: enable CORS for the Streamlit frontend ----------------------
    # Rationale (EN):
    # - Streamlit runs on http://localhost:8501 and calls the Django API from a different origin.
    # - Adding 'corsheaders' allows the browser to make cross-origin requests safely.
    "corsheaders",
    "api",
]

MIDDLEWARE = [
    # --- CHANGE 2 (continued): CORS middleware must be placed at the top -------
    # Rationale : per django-cors-headers docs, it should be first so that
    # CORS headers are added to all responses, including those generated in middleware.
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "vector_db",
        "USER": "postgres",
       "PASSWORD": "team_7",
        "HOST": "localhost",
        "PORT": "5432",
    }
}
"""

# --- CHANGE 3: read DB settings from environment; default HOST to 'localhost' --
# Rationale:
# - Most teammates run Postgres locally; keeping 'localhost' as default preserves current behavior.
# - In Docker, set PG_HOST=pgvector-db to connect to the database service on the Docker network.
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("PG_DB", "vector_db"),
        "USER": os.getenv("PG_USER", "postgres"),
        "PASSWORD": os.getenv("PG_PASSWORD", "team_7"),
        "HOST": os.getenv("PG_HOST", "localhost"),  # default for local dev; set PG_HOST=pgvector-db in Docker
        "PORT": os.getenv("PG_PORT", "5432"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- CHANGE 4: minimal CORS policy for the Streamlit app -----------------------
# Rationale:
# - Allow the Streamlit UI (default http://localhost:8501) to call this API during development.
# - Keep it strict by default; can be widened via env if needed.
CORS_ALLOWED_ORIGINS = [o for o in os.getenv("CORS_ALLOWED_ORIGINS", "http://localhost:8501").split(",") if o]
# If you temporarily need to allow all origins during local debugging, set:
#   CORS_ALLOW_ALL_ORIGINS=1  (in .env)
CORS_ALLOW_ALL_ORIGINS = os.getenv("CORS_ALLOW_ALL_ORIGINS", "0") == "1"

# SECURITY NOTE:
# SECRET_KEY is hardcoded here for development convenience only.
# For production, set DJANGO_SECRET_KEY via environment and read it here.
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-v9j^n!csk_(&k_e3+h3ffwa=ol%a9n@qyc17k-us$mg#_=^#d+')
